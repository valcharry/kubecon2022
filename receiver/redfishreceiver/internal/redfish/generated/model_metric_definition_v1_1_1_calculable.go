/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2020.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package redfish

import (
	"encoding/json"
	"fmt"
)

// MetricDefinitionV111Calculable The types of calculations that can be applied to the metric reading.  Provides information to the client on the suitability of calculation using the metric reading.
type MetricDefinitionV111Calculable string

// List of MetricDefinition_v1_1_1_Calculable
const (
	METRICDEFINITIONV111CALCULABLE_NON_CALCULATABLE MetricDefinitionV111Calculable = "NonCalculatable"
	METRICDEFINITIONV111CALCULABLE_SUMMABLE MetricDefinitionV111Calculable = "Summable"
	METRICDEFINITIONV111CALCULABLE_NON_SUMMABLE MetricDefinitionV111Calculable = "NonSummable"
)

func (v *MetricDefinitionV111Calculable) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MetricDefinitionV111Calculable(value)
	for _, existing := range []MetricDefinitionV111Calculable{ "NonCalculatable", "Summable", "NonSummable",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MetricDefinitionV111Calculable", value)
}

// Ptr returns reference to MetricDefinition_v1_1_1_Calculable value
func (v MetricDefinitionV111Calculable) Ptr() *MetricDefinitionV111Calculable {
	return &v
}

type NullableMetricDefinitionV111Calculable struct {
	value *MetricDefinitionV111Calculable
	isSet bool
}

func (v NullableMetricDefinitionV111Calculable) Get() *MetricDefinitionV111Calculable {
	return v.value
}

func (v *NullableMetricDefinitionV111Calculable) Set(val *MetricDefinitionV111Calculable) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricDefinitionV111Calculable) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricDefinitionV111Calculable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricDefinitionV111Calculable(val *MetricDefinitionV111Calculable) *NullableMetricDefinitionV111Calculable {
	return &NullableMetricDefinitionV111Calculable{value: val, isSet: true}
}

func (v NullableMetricDefinitionV111Calculable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricDefinitionV111Calculable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

