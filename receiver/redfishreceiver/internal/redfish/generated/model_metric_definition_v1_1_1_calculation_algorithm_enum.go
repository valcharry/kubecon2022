/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2020.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package redfish

import (
	"encoding/json"
	"fmt"
)

// MetricDefinitionV111CalculationAlgorithmEnum the model 'MetricDefinitionV111CalculationAlgorithmEnum'
type MetricDefinitionV111CalculationAlgorithmEnum string

// List of MetricDefinition_v1_1_1_CalculationAlgorithmEnum
const (
	METRICDEFINITIONV111CALCULATIONALGORITHMENUM_AVERAGE MetricDefinitionV111CalculationAlgorithmEnum = "Average"
	METRICDEFINITIONV111CALCULATIONALGORITHMENUM_MAXIMUM MetricDefinitionV111CalculationAlgorithmEnum = "Maximum"
	METRICDEFINITIONV111CALCULATIONALGORITHMENUM_MINIMUM MetricDefinitionV111CalculationAlgorithmEnum = "Minimum"
	METRICDEFINITIONV111CALCULATIONALGORITHMENUM_OEM MetricDefinitionV111CalculationAlgorithmEnum = "OEM"
)

func (v *MetricDefinitionV111CalculationAlgorithmEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MetricDefinitionV111CalculationAlgorithmEnum(value)
	for _, existing := range []MetricDefinitionV111CalculationAlgorithmEnum{ "Average", "Maximum", "Minimum", "OEM",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MetricDefinitionV111CalculationAlgorithmEnum", value)
}

// Ptr returns reference to MetricDefinition_v1_1_1_CalculationAlgorithmEnum value
func (v MetricDefinitionV111CalculationAlgorithmEnum) Ptr() *MetricDefinitionV111CalculationAlgorithmEnum {
	return &v
}

type NullableMetricDefinitionV111CalculationAlgorithmEnum struct {
	value *MetricDefinitionV111CalculationAlgorithmEnum
	isSet bool
}

func (v NullableMetricDefinitionV111CalculationAlgorithmEnum) Get() *MetricDefinitionV111CalculationAlgorithmEnum {
	return v.value
}

func (v *NullableMetricDefinitionV111CalculationAlgorithmEnum) Set(val *MetricDefinitionV111CalculationAlgorithmEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricDefinitionV111CalculationAlgorithmEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricDefinitionV111CalculationAlgorithmEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricDefinitionV111CalculationAlgorithmEnum(val *MetricDefinitionV111CalculationAlgorithmEnum) *NullableMetricDefinitionV111CalculationAlgorithmEnum {
	return &NullableMetricDefinitionV111CalculationAlgorithmEnum{value: val, isSet: true}
}

func (v NullableMetricDefinitionV111CalculationAlgorithmEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricDefinitionV111CalculationAlgorithmEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

