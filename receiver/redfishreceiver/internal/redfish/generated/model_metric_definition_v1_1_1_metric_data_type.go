/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2020.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package redfish

import (
	"encoding/json"
	"fmt"
)

// MetricDefinitionV111MetricDataType The data type of the related metric values.  Provides information to the client on the nature of the metric reading.
type MetricDefinitionV111MetricDataType string

// List of MetricDefinition_v1_1_1_MetricDataType
const (
	METRICDEFINITIONV111METRICDATATYPE_BOOLEAN MetricDefinitionV111MetricDataType = "Boolean"
	METRICDEFINITIONV111METRICDATATYPE_DATE_TIME MetricDefinitionV111MetricDataType = "DateTime"
	METRICDEFINITIONV111METRICDATATYPE_DECIMAL MetricDefinitionV111MetricDataType = "Decimal"
	METRICDEFINITIONV111METRICDATATYPE_INTEGER MetricDefinitionV111MetricDataType = "Integer"
	METRICDEFINITIONV111METRICDATATYPE_STRING MetricDefinitionV111MetricDataType = "String"
	METRICDEFINITIONV111METRICDATATYPE_ENUMERATION MetricDefinitionV111MetricDataType = "Enumeration"
)

func (v *MetricDefinitionV111MetricDataType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MetricDefinitionV111MetricDataType(value)
	for _, existing := range []MetricDefinitionV111MetricDataType{ "Boolean", "DateTime", "Decimal", "Integer", "String", "Enumeration",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MetricDefinitionV111MetricDataType", value)
}

// Ptr returns reference to MetricDefinition_v1_1_1_MetricDataType value
func (v MetricDefinitionV111MetricDataType) Ptr() *MetricDefinitionV111MetricDataType {
	return &v
}

type NullableMetricDefinitionV111MetricDataType struct {
	value *MetricDefinitionV111MetricDataType
	isSet bool
}

func (v NullableMetricDefinitionV111MetricDataType) Get() *MetricDefinitionV111MetricDataType {
	return v.value
}

func (v *NullableMetricDefinitionV111MetricDataType) Set(val *MetricDefinitionV111MetricDataType) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricDefinitionV111MetricDataType) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricDefinitionV111MetricDataType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricDefinitionV111MetricDataType(val *MetricDefinitionV111MetricDataType) *NullableMetricDefinitionV111MetricDataType {
	return &NullableMetricDefinitionV111MetricDataType{value: val, isSet: true}
}

func (v NullableMetricDefinitionV111MetricDataType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricDefinitionV111MetricDataType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

