/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2020.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package redfish

import (
	"encoding/json"
	"fmt"
)

// MetricDefinitionV111MetricType The type of metric.  Provides information to the client on how the metric can be handled.
type MetricDefinitionV111MetricType string

// List of MetricDefinition_v1_1_1_MetricType
const (
	METRICDEFINITIONV111METRICTYPE_NUMERIC MetricDefinitionV111MetricType = "Numeric"
	METRICDEFINITIONV111METRICTYPE_DISCRETE MetricDefinitionV111MetricType = "Discrete"
	METRICDEFINITIONV111METRICTYPE_GAUGE MetricDefinitionV111MetricType = "Gauge"
	METRICDEFINITIONV111METRICTYPE_COUNTER MetricDefinitionV111MetricType = "Counter"
	METRICDEFINITIONV111METRICTYPE_COUNTDOWN MetricDefinitionV111MetricType = "Countdown"
)

func (v *MetricDefinitionV111MetricType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MetricDefinitionV111MetricType(value)
	for _, existing := range []MetricDefinitionV111MetricType{ "Numeric", "Discrete", "Gauge", "Counter", "Countdown",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MetricDefinitionV111MetricType", value)
}

// Ptr returns reference to MetricDefinition_v1_1_1_MetricType value
func (v MetricDefinitionV111MetricType) Ptr() *MetricDefinitionV111MetricType {
	return &v
}

type NullableMetricDefinitionV111MetricType struct {
	value *MetricDefinitionV111MetricType
	isSet bool
}

func (v NullableMetricDefinitionV111MetricType) Get() *MetricDefinitionV111MetricType {
	return v.value
}

func (v *NullableMetricDefinitionV111MetricType) Set(val *MetricDefinitionV111MetricType) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricDefinitionV111MetricType) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricDefinitionV111MetricType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricDefinitionV111MetricType(val *MetricDefinitionV111MetricType) *NullableMetricDefinitionV111MetricType {
	return &NullableMetricDefinitionV111MetricType{value: val, isSet: true}
}

func (v NullableMetricDefinitionV111MetricType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricDefinitionV111MetricType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

