/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2020.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package redfish

import (
	"encoding/json"
)

// MetricReportDefinitionV140Links The links to other resources that are related to this resource.
type MetricReportDefinitionV140Links struct {
	// The OEM extension.
	Oem *map[string]map[string]interface{} `json:"Oem,omitempty"`
	// The triggers that cause this metric report definition to generate a new metric report upon a trigger occurrence when the TriggerActions property contains `RedfishMetricReport`.
	Triggers *[]OdataV4IdRef `json:"Triggers,omitempty"`
	// The number of items in a collection.
	TriggersodataCount *int64 `json:"Triggers@odata.count,omitempty"`
}

// NewMetricReportDefinitionV140Links instantiates a new MetricReportDefinitionV140Links object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricReportDefinitionV140Links() *MetricReportDefinitionV140Links {
	this := MetricReportDefinitionV140Links{}
	return &this
}

// NewMetricReportDefinitionV140LinksWithDefaults instantiates a new MetricReportDefinitionV140Links object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricReportDefinitionV140LinksWithDefaults() *MetricReportDefinitionV140Links {
	this := MetricReportDefinitionV140Links{}
	return &this
}

// GetOem returns the Oem field value if set, zero value otherwise.
func (o *MetricReportDefinitionV140Links) GetOem() map[string]map[string]interface{} {
	if o == nil || o.Oem == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.Oem
}

// GetOemOk returns a tuple with the Oem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricReportDefinitionV140Links) GetOemOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || o.Oem == nil {
		return nil, false
	}
	return o.Oem, true
}

// HasOem returns a boolean if a field has been set.
func (o *MetricReportDefinitionV140Links) HasOem() bool {
	if o != nil && o.Oem != nil {
		return true
	}

	return false
}

// SetOem gets a reference to the given map[string]map[string]interface{} and assigns it to the Oem field.
func (o *MetricReportDefinitionV140Links) SetOem(v map[string]map[string]interface{}) {
	o.Oem = &v
}

// GetTriggers returns the Triggers field value if set, zero value otherwise.
func (o *MetricReportDefinitionV140Links) GetTriggers() []OdataV4IdRef {
	if o == nil || o.Triggers == nil {
		var ret []OdataV4IdRef
		return ret
	}
	return *o.Triggers
}

// GetTriggersOk returns a tuple with the Triggers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricReportDefinitionV140Links) GetTriggersOk() (*[]OdataV4IdRef, bool) {
	if o == nil || o.Triggers == nil {
		return nil, false
	}
	return o.Triggers, true
}

// HasTriggers returns a boolean if a field has been set.
func (o *MetricReportDefinitionV140Links) HasTriggers() bool {
	if o != nil && o.Triggers != nil {
		return true
	}

	return false
}

// SetTriggers gets a reference to the given []OdataV4IdRef and assigns it to the Triggers field.
func (o *MetricReportDefinitionV140Links) SetTriggers(v []OdataV4IdRef) {
	o.Triggers = &v
}

// GetTriggersodataCount returns the TriggersodataCount field value if set, zero value otherwise.
func (o *MetricReportDefinitionV140Links) GetTriggersodataCount() int64 {
	if o == nil || o.TriggersodataCount == nil {
		var ret int64
		return ret
	}
	return *o.TriggersodataCount
}

// GetTriggersodataCountOk returns a tuple with the TriggersodataCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricReportDefinitionV140Links) GetTriggersodataCountOk() (*int64, bool) {
	if o == nil || o.TriggersodataCount == nil {
		return nil, false
	}
	return o.TriggersodataCount, true
}

// HasTriggersodataCount returns a boolean if a field has been set.
func (o *MetricReportDefinitionV140Links) HasTriggersodataCount() bool {
	if o != nil && o.TriggersodataCount != nil {
		return true
	}

	return false
}

// SetTriggersodataCount gets a reference to the given int64 and assigns it to the TriggersodataCount field.
func (o *MetricReportDefinitionV140Links) SetTriggersodataCount(v int64) {
	o.TriggersodataCount = &v
}

func (o MetricReportDefinitionV140Links) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Oem != nil {
		toSerialize["Oem"] = o.Oem
	}
	if o.Triggers != nil {
		toSerialize["Triggers"] = o.Triggers
	}
	if o.TriggersodataCount != nil {
		toSerialize["Triggers@odata.count"] = o.TriggersodataCount
	}
	return json.Marshal(toSerialize)
}

type NullableMetricReportDefinitionV140Links struct {
	value *MetricReportDefinitionV140Links
	isSet bool
}

func (v NullableMetricReportDefinitionV140Links) Get() *MetricReportDefinitionV140Links {
	return v.value
}

func (v *NullableMetricReportDefinitionV140Links) Set(val *MetricReportDefinitionV140Links) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricReportDefinitionV140Links) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricReportDefinitionV140Links) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricReportDefinitionV140Links(val *MetricReportDefinitionV140Links) *NullableMetricReportDefinitionV140Links {
	return &NullableMetricReportDefinitionV140Links{value: val, isSet: true}
}

func (v NullableMetricReportDefinitionV140Links) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricReportDefinitionV140Links) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


