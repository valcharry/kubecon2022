/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2020.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package redfish

import (
	"encoding/json"
	"fmt"
)

// MetricReportDefinitionV140MetricReportDefinitionType Indicates when the metric report is generated.
type MetricReportDefinitionV140MetricReportDefinitionType string

// List of MetricReportDefinition_v1_4_0_MetricReportDefinitionType
const (
	METRICREPORTDEFINITIONV140METRICREPORTDEFINITIONTYPE_PERIODIC MetricReportDefinitionV140MetricReportDefinitionType = "Periodic"
	METRICREPORTDEFINITIONV140METRICREPORTDEFINITIONTYPE_ON_CHANGE MetricReportDefinitionV140MetricReportDefinitionType = "OnChange"
	METRICREPORTDEFINITIONV140METRICREPORTDEFINITIONTYPE_ON_REQUEST MetricReportDefinitionV140MetricReportDefinitionType = "OnRequest"
)

func (v *MetricReportDefinitionV140MetricReportDefinitionType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MetricReportDefinitionV140MetricReportDefinitionType(value)
	for _, existing := range []MetricReportDefinitionV140MetricReportDefinitionType{ "Periodic", "OnChange", "OnRequest",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MetricReportDefinitionV140MetricReportDefinitionType", value)
}

// Ptr returns reference to MetricReportDefinition_v1_4_0_MetricReportDefinitionType value
func (v MetricReportDefinitionV140MetricReportDefinitionType) Ptr() *MetricReportDefinitionV140MetricReportDefinitionType {
	return &v
}

type NullableMetricReportDefinitionV140MetricReportDefinitionType struct {
	value *MetricReportDefinitionV140MetricReportDefinitionType
	isSet bool
}

func (v NullableMetricReportDefinitionV140MetricReportDefinitionType) Get() *MetricReportDefinitionV140MetricReportDefinitionType {
	return v.value
}

func (v *NullableMetricReportDefinitionV140MetricReportDefinitionType) Set(val *MetricReportDefinitionV140MetricReportDefinitionType) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricReportDefinitionV140MetricReportDefinitionType) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricReportDefinitionV140MetricReportDefinitionType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricReportDefinitionV140MetricReportDefinitionType(val *MetricReportDefinitionV140MetricReportDefinitionType) *NullableMetricReportDefinitionV140MetricReportDefinitionType {
	return &NullableMetricReportDefinitionV140MetricReportDefinitionType{value: val, isSet: true}
}

func (v NullableMetricReportDefinitionV140MetricReportDefinitionType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricReportDefinitionV140MetricReportDefinitionType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

