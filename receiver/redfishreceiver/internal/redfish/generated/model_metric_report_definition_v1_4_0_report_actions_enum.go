/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2020.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package redfish

import (
	"encoding/json"
	"fmt"
)

// MetricReportDefinitionV140ReportActionsEnum Actions to perform when a metric report is generated.
type MetricReportDefinitionV140ReportActionsEnum string

// List of MetricReportDefinition_v1_4_0_ReportActionsEnum
const (
	METRICREPORTDEFINITIONV140REPORTACTIONSENUM_LOG_TO_METRIC_REPORTS_COLLECTION MetricReportDefinitionV140ReportActionsEnum = "LogToMetricReportsCollection"
	METRICREPORTDEFINITIONV140REPORTACTIONSENUM_REDFISH_EVENT MetricReportDefinitionV140ReportActionsEnum = "RedfishEvent"
)

func (v *MetricReportDefinitionV140ReportActionsEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MetricReportDefinitionV140ReportActionsEnum(value)
	for _, existing := range []MetricReportDefinitionV140ReportActionsEnum{ "LogToMetricReportsCollection", "RedfishEvent",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MetricReportDefinitionV140ReportActionsEnum", value)
}

// Ptr returns reference to MetricReportDefinition_v1_4_0_ReportActionsEnum value
func (v MetricReportDefinitionV140ReportActionsEnum) Ptr() *MetricReportDefinitionV140ReportActionsEnum {
	return &v
}

type NullableMetricReportDefinitionV140ReportActionsEnum struct {
	value *MetricReportDefinitionV140ReportActionsEnum
	isSet bool
}

func (v NullableMetricReportDefinitionV140ReportActionsEnum) Get() *MetricReportDefinitionV140ReportActionsEnum {
	return v.value
}

func (v *NullableMetricReportDefinitionV140ReportActionsEnum) Set(val *MetricReportDefinitionV140ReportActionsEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricReportDefinitionV140ReportActionsEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricReportDefinitionV140ReportActionsEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricReportDefinitionV140ReportActionsEnum(val *MetricReportDefinitionV140ReportActionsEnum) *NullableMetricReportDefinitionV140ReportActionsEnum {
	return &NullableMetricReportDefinitionV140ReportActionsEnum{value: val, isSet: true}
}

func (v NullableMetricReportDefinitionV140ReportActionsEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricReportDefinitionV140ReportActionsEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

