/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2020.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package redfish

import (
	"encoding/json"
	"time"
)

// MetricReportV141MetricReport The MetricReport schema represents a set of collected metrics.
type MetricReportV141MetricReport struct {
	// The OData description of a payload.
	OdataContext *string `json:"@odata.context,omitempty"`
	// The current ETag of the resource.
	OdataEtag *string `json:"@odata.etag,omitempty"`
	// The unique identifier for a resource.
	OdataId string `json:"@odata.id"`
	// The type of a resource.
	OdataType string `json:"@odata.type"`
	Actions *MetricReportV141Actions `json:"Actions,omitempty"`
	// A context can be supplied at subscription time.  This property is the context value supplied by the subscriber.
	Context *string `json:"Context,omitempty"`
	// The description of this resource.  Used for commonality in the schema definitions.
	Description *string `json:"Description,omitempty"`
	// The identifier that uniquely identifies the resource within the collection of similar resources.
	Id string `json:"Id"`
	MetricReportDefinition *OdataV4IdRef `json:"MetricReportDefinition,omitempty"`
	// An array of metric values for the metered items of this metric report.
	MetricValues *[]MetricReportV141MetricValue `json:"MetricValues,omitempty"`
	// The name of the resource or array member.
	Name string `json:"Name"`
	// The OEM extension.
	Oem *map[string]map[string]interface{} `json:"Oem,omitempty"`
	// The current sequence identifier for this metric report.
	ReportSequence *string `json:"ReportSequence,omitempty"`
	// The time associated with the metric report in its entirety.  The time of the metric report can be relevant when the time of individual metrics are minimally different.
	Timestamp NullableTime `json:"Timestamp,omitempty"`
}

// NewMetricReportV141MetricReport instantiates a new MetricReportV141MetricReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricReportV141MetricReport(odataId string, odataType string, id string, name string, ) *MetricReportV141MetricReport {
	this := MetricReportV141MetricReport{}
	this.OdataId = odataId
	this.OdataType = odataType
	this.Id = id
	this.Name = name
	return &this
}

// NewMetricReportV141MetricReportWithDefaults instantiates a new MetricReportV141MetricReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricReportV141MetricReportWithDefaults() *MetricReportV141MetricReport {
	this := MetricReportV141MetricReport{}
	return &this
}

// GetOdataContext returns the OdataContext field value if set, zero value otherwise.
func (o *MetricReportV141MetricReport) GetOdataContext() string {
	if o == nil || o.OdataContext == nil {
		var ret string
		return ret
	}
	return *o.OdataContext
}

// GetOdataContextOk returns a tuple with the OdataContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricReportV141MetricReport) GetOdataContextOk() (*string, bool) {
	if o == nil || o.OdataContext == nil {
		return nil, false
	}
	return o.OdataContext, true
}

// HasOdataContext returns a boolean if a field has been set.
func (o *MetricReportV141MetricReport) HasOdataContext() bool {
	if o != nil && o.OdataContext != nil {
		return true
	}

	return false
}

// SetOdataContext gets a reference to the given string and assigns it to the OdataContext field.
func (o *MetricReportV141MetricReport) SetOdataContext(v string) {
	o.OdataContext = &v
}

// GetOdataEtag returns the OdataEtag field value if set, zero value otherwise.
func (o *MetricReportV141MetricReport) GetOdataEtag() string {
	if o == nil || o.OdataEtag == nil {
		var ret string
		return ret
	}
	return *o.OdataEtag
}

// GetOdataEtagOk returns a tuple with the OdataEtag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricReportV141MetricReport) GetOdataEtagOk() (*string, bool) {
	if o == nil || o.OdataEtag == nil {
		return nil, false
	}
	return o.OdataEtag, true
}

// HasOdataEtag returns a boolean if a field has been set.
func (o *MetricReportV141MetricReport) HasOdataEtag() bool {
	if o != nil && o.OdataEtag != nil {
		return true
	}

	return false
}

// SetOdataEtag gets a reference to the given string and assigns it to the OdataEtag field.
func (o *MetricReportV141MetricReport) SetOdataEtag(v string) {
	o.OdataEtag = &v
}

// GetOdataId returns the OdataId field value
func (o *MetricReportV141MetricReport) GetOdataId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.OdataId
}

// GetOdataIdOk returns a tuple with the OdataId field value
// and a boolean to check if the value has been set.
func (o *MetricReportV141MetricReport) GetOdataIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OdataId, true
}

// SetOdataId sets field value
func (o *MetricReportV141MetricReport) SetOdataId(v string) {
	o.OdataId = v
}

// GetOdataType returns the OdataType field value
func (o *MetricReportV141MetricReport) GetOdataType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.OdataType
}

// GetOdataTypeOk returns a tuple with the OdataType field value
// and a boolean to check if the value has been set.
func (o *MetricReportV141MetricReport) GetOdataTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OdataType, true
}

// SetOdataType sets field value
func (o *MetricReportV141MetricReport) SetOdataType(v string) {
	o.OdataType = v
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *MetricReportV141MetricReport) GetActions() MetricReportV141Actions {
	if o == nil || o.Actions == nil {
		var ret MetricReportV141Actions
		return ret
	}
	return *o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricReportV141MetricReport) GetActionsOk() (*MetricReportV141Actions, bool) {
	if o == nil || o.Actions == nil {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *MetricReportV141MetricReport) HasActions() bool {
	if o != nil && o.Actions != nil {
		return true
	}

	return false
}

// SetActions gets a reference to the given MetricReportV141Actions and assigns it to the Actions field.
func (o *MetricReportV141MetricReport) SetActions(v MetricReportV141Actions) {
	o.Actions = &v
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *MetricReportV141MetricReport) GetContext() string {
	if o == nil || o.Context == nil {
		var ret string
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricReportV141MetricReport) GetContextOk() (*string, bool) {
	if o == nil || o.Context == nil {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *MetricReportV141MetricReport) HasContext() bool {
	if o != nil && o.Context != nil {
		return true
	}

	return false
}

// SetContext gets a reference to the given string and assigns it to the Context field.
func (o *MetricReportV141MetricReport) SetContext(v string) {
	o.Context = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MetricReportV141MetricReport) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricReportV141MetricReport) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MetricReportV141MetricReport) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MetricReportV141MetricReport) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value
func (o *MetricReportV141MetricReport) GetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MetricReportV141MetricReport) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MetricReportV141MetricReport) SetId(v string) {
	o.Id = v
}

// GetMetricReportDefinition returns the MetricReportDefinition field value if set, zero value otherwise.
func (o *MetricReportV141MetricReport) GetMetricReportDefinition() OdataV4IdRef {
	if o == nil || o.MetricReportDefinition == nil {
		var ret OdataV4IdRef
		return ret
	}
	return *o.MetricReportDefinition
}

// GetMetricReportDefinitionOk returns a tuple with the MetricReportDefinition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricReportV141MetricReport) GetMetricReportDefinitionOk() (*OdataV4IdRef, bool) {
	if o == nil || o.MetricReportDefinition == nil {
		return nil, false
	}
	return o.MetricReportDefinition, true
}

// HasMetricReportDefinition returns a boolean if a field has been set.
func (o *MetricReportV141MetricReport) HasMetricReportDefinition() bool {
	if o != nil && o.MetricReportDefinition != nil {
		return true
	}

	return false
}

// SetMetricReportDefinition gets a reference to the given OdataV4IdRef and assigns it to the MetricReportDefinition field.
func (o *MetricReportV141MetricReport) SetMetricReportDefinition(v OdataV4IdRef) {
	o.MetricReportDefinition = &v
}

// GetMetricValues returns the MetricValues field value if set, zero value otherwise.
func (o *MetricReportV141MetricReport) GetMetricValues() []MetricReportV141MetricValue {
	if o == nil || o.MetricValues == nil {
		var ret []MetricReportV141MetricValue
		return ret
	}
	return *o.MetricValues
}

// GetMetricValuesOk returns a tuple with the MetricValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricReportV141MetricReport) GetMetricValuesOk() (*[]MetricReportV141MetricValue, bool) {
	if o == nil || o.MetricValues == nil {
		return nil, false
	}
	return o.MetricValues, true
}

// HasMetricValues returns a boolean if a field has been set.
func (o *MetricReportV141MetricReport) HasMetricValues() bool {
	if o != nil && o.MetricValues != nil {
		return true
	}

	return false
}

// SetMetricValues gets a reference to the given []MetricReportV141MetricValue and assigns it to the MetricValues field.
func (o *MetricReportV141MetricReport) SetMetricValues(v []MetricReportV141MetricValue) {
	o.MetricValues = &v
}

// GetName returns the Name field value
func (o *MetricReportV141MetricReport) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MetricReportV141MetricReport) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MetricReportV141MetricReport) SetName(v string) {
	o.Name = v
}

// GetOem returns the Oem field value if set, zero value otherwise.
func (o *MetricReportV141MetricReport) GetOem() map[string]map[string]interface{} {
	if o == nil || o.Oem == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.Oem
}

// GetOemOk returns a tuple with the Oem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricReportV141MetricReport) GetOemOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || o.Oem == nil {
		return nil, false
	}
	return o.Oem, true
}

// HasOem returns a boolean if a field has been set.
func (o *MetricReportV141MetricReport) HasOem() bool {
	if o != nil && o.Oem != nil {
		return true
	}

	return false
}

// SetOem gets a reference to the given map[string]map[string]interface{} and assigns it to the Oem field.
func (o *MetricReportV141MetricReport) SetOem(v map[string]map[string]interface{}) {
	o.Oem = &v
}

// GetReportSequence returns the ReportSequence field value if set, zero value otherwise.
func (o *MetricReportV141MetricReport) GetReportSequence() string {
	if o == nil || o.ReportSequence == nil {
		var ret string
		return ret
	}
	return *o.ReportSequence
}

// GetReportSequenceOk returns a tuple with the ReportSequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricReportV141MetricReport) GetReportSequenceOk() (*string, bool) {
	if o == nil || o.ReportSequence == nil {
		return nil, false
	}
	return o.ReportSequence, true
}

// HasReportSequence returns a boolean if a field has been set.
func (o *MetricReportV141MetricReport) HasReportSequence() bool {
	if o != nil && o.ReportSequence != nil {
		return true
	}

	return false
}

// SetReportSequence gets a reference to the given string and assigns it to the ReportSequence field.
func (o *MetricReportV141MetricReport) SetReportSequence(v string) {
	o.ReportSequence = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MetricReportV141MetricReport) GetTimestamp() time.Time {
	if o == nil || o.Timestamp.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.Timestamp.Get()
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MetricReportV141MetricReport) GetTimestampOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Timestamp.Get(), o.Timestamp.IsSet()
}

// HasTimestamp returns a boolean if a field has been set.
func (o *MetricReportV141MetricReport) HasTimestamp() bool {
	if o != nil && o.Timestamp.IsSet() {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given NullableTime and assigns it to the Timestamp field.
func (o *MetricReportV141MetricReport) SetTimestamp(v time.Time) {
	o.Timestamp.Set(&v)
}
// SetTimestampNil sets the value for Timestamp to be an explicit nil
func (o *MetricReportV141MetricReport) SetTimestampNil() {
	o.Timestamp.Set(nil)
}

// UnsetTimestamp ensures that no value is present for Timestamp, not even an explicit nil
func (o *MetricReportV141MetricReport) UnsetTimestamp() {
	o.Timestamp.Unset()
}

func (o MetricReportV141MetricReport) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OdataContext != nil {
		toSerialize["@odata.context"] = o.OdataContext
	}
	if o.OdataEtag != nil {
		toSerialize["@odata.etag"] = o.OdataEtag
	}
	if true {
		toSerialize["@odata.id"] = o.OdataId
	}
	if true {
		toSerialize["@odata.type"] = o.OdataType
	}
	if o.Actions != nil {
		toSerialize["Actions"] = o.Actions
	}
	if o.Context != nil {
		toSerialize["Context"] = o.Context
	}
	if o.Description != nil {
		toSerialize["Description"] = o.Description
	}
	if true {
		toSerialize["Id"] = o.Id
	}
	if o.MetricReportDefinition != nil {
		toSerialize["MetricReportDefinition"] = o.MetricReportDefinition
	}
	if o.MetricValues != nil {
		toSerialize["MetricValues"] = o.MetricValues
	}
	if true {
		toSerialize["Name"] = o.Name
	}
	if o.Oem != nil {
		toSerialize["Oem"] = o.Oem
	}
	if o.ReportSequence != nil {
		toSerialize["ReportSequence"] = o.ReportSequence
	}
	if o.Timestamp.IsSet() {
		toSerialize["Timestamp"] = o.Timestamp.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMetricReportV141MetricReport struct {
	value *MetricReportV141MetricReport
	isSet bool
}

func (v NullableMetricReportV141MetricReport) Get() *MetricReportV141MetricReport {
	return v.value
}

func (v *NullableMetricReportV141MetricReport) Set(val *MetricReportV141MetricReport) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricReportV141MetricReport) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricReportV141MetricReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricReportV141MetricReport(val *MetricReportV141MetricReport) *NullableMetricReportV141MetricReport {
	return &NullableMetricReportV141MetricReport{value: val, isSet: true}
}

func (v NullableMetricReportV141MetricReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricReportV141MetricReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


