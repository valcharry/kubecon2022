/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2020.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package redfish

import (
	"encoding/json"
	"fmt"
)

// PhysicalContextPhysicalContext the model 'PhysicalContextPhysicalContext'
type PhysicalContextPhysicalContext string

// List of PhysicalContext_PhysicalContext
const (
	PHYSICALCONTEXTPHYSICALCONTEXT_ROOM PhysicalContextPhysicalContext = "Room"
	PHYSICALCONTEXTPHYSICALCONTEXT_INTAKE PhysicalContextPhysicalContext = "Intake"
	PHYSICALCONTEXTPHYSICALCONTEXT_EXHAUST PhysicalContextPhysicalContext = "Exhaust"
	PHYSICALCONTEXTPHYSICALCONTEXT_LIQUID_INLET PhysicalContextPhysicalContext = "LiquidInlet"
	PHYSICALCONTEXTPHYSICALCONTEXT_LIQUID_OUTLET PhysicalContextPhysicalContext = "LiquidOutlet"
	PHYSICALCONTEXTPHYSICALCONTEXT_FRONT PhysicalContextPhysicalContext = "Front"
	PHYSICALCONTEXTPHYSICALCONTEXT_BACK PhysicalContextPhysicalContext = "Back"
	PHYSICALCONTEXTPHYSICALCONTEXT_UPPER PhysicalContextPhysicalContext = "Upper"
	PHYSICALCONTEXTPHYSICALCONTEXT_LOWER PhysicalContextPhysicalContext = "Lower"
	PHYSICALCONTEXTPHYSICALCONTEXT_CPU PhysicalContextPhysicalContext = "CPU"
	PHYSICALCONTEXTPHYSICALCONTEXT_CPU_SUBSYSTEM PhysicalContextPhysicalContext = "CPUSubsystem"
	PHYSICALCONTEXTPHYSICALCONTEXT_GPU PhysicalContextPhysicalContext = "GPU"
	PHYSICALCONTEXTPHYSICALCONTEXT_GPU_SUBSYSTEM PhysicalContextPhysicalContext = "GPUSubsystem"
	PHYSICALCONTEXTPHYSICALCONTEXT_FPGA PhysicalContextPhysicalContext = "FPGA"
	PHYSICALCONTEXTPHYSICALCONTEXT_ACCELERATOR PhysicalContextPhysicalContext = "Accelerator"
	PHYSICALCONTEXTPHYSICALCONTEXT_ASIC PhysicalContextPhysicalContext = "ASIC"
	PHYSICALCONTEXTPHYSICALCONTEXT_BACKPLANE PhysicalContextPhysicalContext = "Backplane"
	PHYSICALCONTEXTPHYSICALCONTEXT_SYSTEM_BOARD PhysicalContextPhysicalContext = "SystemBoard"
	PHYSICALCONTEXTPHYSICALCONTEXT_POWER_SUPPLY PhysicalContextPhysicalContext = "PowerSupply"
	PHYSICALCONTEXTPHYSICALCONTEXT_POWER_SUBSYSTEM PhysicalContextPhysicalContext = "PowerSubsystem"
	PHYSICALCONTEXTPHYSICALCONTEXT_VOLTAGE_REGULATOR PhysicalContextPhysicalContext = "VoltageRegulator"
	PHYSICALCONTEXTPHYSICALCONTEXT_RECTIFIER PhysicalContextPhysicalContext = "Rectifier"
	PHYSICALCONTEXTPHYSICALCONTEXT_STORAGE_DEVICE PhysicalContextPhysicalContext = "StorageDevice"
	PHYSICALCONTEXTPHYSICALCONTEXT_NETWORKING_DEVICE PhysicalContextPhysicalContext = "NetworkingDevice"
	PHYSICALCONTEXTPHYSICALCONTEXT_COMPUTE_BAY PhysicalContextPhysicalContext = "ComputeBay"
	PHYSICALCONTEXTPHYSICALCONTEXT_STORAGE_BAY PhysicalContextPhysicalContext = "StorageBay"
	PHYSICALCONTEXTPHYSICALCONTEXT_NETWORK_BAY PhysicalContextPhysicalContext = "NetworkBay"
	PHYSICALCONTEXTPHYSICALCONTEXT_EXPANSION_BAY PhysicalContextPhysicalContext = "ExpansionBay"
	PHYSICALCONTEXTPHYSICALCONTEXT_POWER_SUPPLY_BAY PhysicalContextPhysicalContext = "PowerSupplyBay"
	PHYSICALCONTEXTPHYSICALCONTEXT_MEMORY PhysicalContextPhysicalContext = "Memory"
	PHYSICALCONTEXTPHYSICALCONTEXT_MEMORY_SUBSYSTEM PhysicalContextPhysicalContext = "MemorySubsystem"
	PHYSICALCONTEXTPHYSICALCONTEXT_CHASSIS PhysicalContextPhysicalContext = "Chassis"
	PHYSICALCONTEXTPHYSICALCONTEXT_FAN PhysicalContextPhysicalContext = "Fan"
	PHYSICALCONTEXTPHYSICALCONTEXT_COOLING_SUBSYSTEM PhysicalContextPhysicalContext = "CoolingSubsystem"
	PHYSICALCONTEXTPHYSICALCONTEXT_MOTOR PhysicalContextPhysicalContext = "Motor"
	PHYSICALCONTEXTPHYSICALCONTEXT_TRANSFORMER PhysicalContextPhysicalContext = "Transformer"
	PHYSICALCONTEXTPHYSICALCONTEXT_AC_UTILITY_INPUT PhysicalContextPhysicalContext = "ACUtilityInput"
	PHYSICALCONTEXTPHYSICALCONTEXT_AC_STATIC_BYPASS_INPUT PhysicalContextPhysicalContext = "ACStaticBypassInput"
	PHYSICALCONTEXTPHYSICALCONTEXT_AC_MAINTENANCE_BYPASS_INPUT PhysicalContextPhysicalContext = "ACMaintenanceBypassInput"
	PHYSICALCONTEXTPHYSICALCONTEXT_DC_BUS PhysicalContextPhysicalContext = "DCBus"
	PHYSICALCONTEXTPHYSICALCONTEXT_AC_OUTPUT PhysicalContextPhysicalContext = "ACOutput"
	PHYSICALCONTEXTPHYSICALCONTEXT_AC_INPUT PhysicalContextPhysicalContext = "ACInput"
	PHYSICALCONTEXTPHYSICALCONTEXT_TRUSTED_MODULE PhysicalContextPhysicalContext = "TrustedModule"
)

func (v *PhysicalContextPhysicalContext) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PhysicalContextPhysicalContext(value)
	for _, existing := range []PhysicalContextPhysicalContext{ "Room", "Intake", "Exhaust", "LiquidInlet", "LiquidOutlet", "Front", "Back", "Upper", "Lower", "CPU", "CPUSubsystem", "GPU", "GPUSubsystem", "FPGA", "Accelerator", "ASIC", "Backplane", "SystemBoard", "PowerSupply", "PowerSubsystem", "VoltageRegulator", "Rectifier", "StorageDevice", "NetworkingDevice", "ComputeBay", "StorageBay", "NetworkBay", "ExpansionBay", "PowerSupplyBay", "Memory", "MemorySubsystem", "Chassis", "Fan", "CoolingSubsystem", "Motor", "Transformer", "ACUtilityInput", "ACStaticBypassInput", "ACMaintenanceBypassInput", "DCBus", "ACOutput", "ACInput", "TrustedModule",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PhysicalContextPhysicalContext", value)
}

// Ptr returns reference to PhysicalContext_PhysicalContext value
func (v PhysicalContextPhysicalContext) Ptr() *PhysicalContextPhysicalContext {
	return &v
}

type NullablePhysicalContextPhysicalContext struct {
	value *PhysicalContextPhysicalContext
	isSet bool
}

func (v NullablePhysicalContextPhysicalContext) Get() *PhysicalContextPhysicalContext {
	return v.value
}

func (v *NullablePhysicalContextPhysicalContext) Set(val *PhysicalContextPhysicalContext) {
	v.value = val
	v.isSet = true
}

func (v NullablePhysicalContextPhysicalContext) IsSet() bool {
	return v.isSet
}

func (v *NullablePhysicalContextPhysicalContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePhysicalContextPhysicalContext(val *PhysicalContextPhysicalContext) *NullablePhysicalContextPhysicalContext {
	return &NullablePhysicalContextPhysicalContext{value: val, isSet: true}
}

func (v NullablePhysicalContextPhysicalContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePhysicalContextPhysicalContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

