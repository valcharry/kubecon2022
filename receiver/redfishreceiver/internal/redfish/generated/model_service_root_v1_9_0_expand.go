/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2020.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package redfish

import (
	"encoding/json"
)

// ServiceRootV190Expand The information about the use of $expand in the service.
type ServiceRootV190Expand struct {
	// An indication of whether the service supports the asterisk (`*`) option of the $expand query parameter.
	ExpandAll *bool `json:"ExpandAll,omitempty"`
	// An indication of whether the service supports the $levels option of the $expand query parameter.
	Levels *bool `json:"Levels,omitempty"`
	// An indication of whether this service supports the tilde (`~`) option of the $expand query parameter.
	Links *bool `json:"Links,omitempty"`
	// The maximum $levels option value in the $expand query parameter.
	MaxLevels *int64 `json:"MaxLevels,omitempty"`
	// An indication of whether the service supports the period (`.`) option of the $expand query parameter.
	NoLinks *bool `json:"NoLinks,omitempty"`
}

// NewServiceRootV190Expand instantiates a new ServiceRootV190Expand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceRootV190Expand() *ServiceRootV190Expand {
	this := ServiceRootV190Expand{}
	return &this
}

// NewServiceRootV190ExpandWithDefaults instantiates a new ServiceRootV190Expand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceRootV190ExpandWithDefaults() *ServiceRootV190Expand {
	this := ServiceRootV190Expand{}
	return &this
}

// GetExpandAll returns the ExpandAll field value if set, zero value otherwise.
func (o *ServiceRootV190Expand) GetExpandAll() bool {
	if o == nil || o.ExpandAll == nil {
		var ret bool
		return ret
	}
	return *o.ExpandAll
}

// GetExpandAllOk returns a tuple with the ExpandAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190Expand) GetExpandAllOk() (*bool, bool) {
	if o == nil || o.ExpandAll == nil {
		return nil, false
	}
	return o.ExpandAll, true
}

// HasExpandAll returns a boolean if a field has been set.
func (o *ServiceRootV190Expand) HasExpandAll() bool {
	if o != nil && o.ExpandAll != nil {
		return true
	}

	return false
}

// SetExpandAll gets a reference to the given bool and assigns it to the ExpandAll field.
func (o *ServiceRootV190Expand) SetExpandAll(v bool) {
	o.ExpandAll = &v
}

// GetLevels returns the Levels field value if set, zero value otherwise.
func (o *ServiceRootV190Expand) GetLevels() bool {
	if o == nil || o.Levels == nil {
		var ret bool
		return ret
	}
	return *o.Levels
}

// GetLevelsOk returns a tuple with the Levels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190Expand) GetLevelsOk() (*bool, bool) {
	if o == nil || o.Levels == nil {
		return nil, false
	}
	return o.Levels, true
}

// HasLevels returns a boolean if a field has been set.
func (o *ServiceRootV190Expand) HasLevels() bool {
	if o != nil && o.Levels != nil {
		return true
	}

	return false
}

// SetLevels gets a reference to the given bool and assigns it to the Levels field.
func (o *ServiceRootV190Expand) SetLevels(v bool) {
	o.Levels = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ServiceRootV190Expand) GetLinks() bool {
	if o == nil || o.Links == nil {
		var ret bool
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190Expand) GetLinksOk() (*bool, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ServiceRootV190Expand) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given bool and assigns it to the Links field.
func (o *ServiceRootV190Expand) SetLinks(v bool) {
	o.Links = &v
}

// GetMaxLevels returns the MaxLevels field value if set, zero value otherwise.
func (o *ServiceRootV190Expand) GetMaxLevels() int64 {
	if o == nil || o.MaxLevels == nil {
		var ret int64
		return ret
	}
	return *o.MaxLevels
}

// GetMaxLevelsOk returns a tuple with the MaxLevels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190Expand) GetMaxLevelsOk() (*int64, bool) {
	if o == nil || o.MaxLevels == nil {
		return nil, false
	}
	return o.MaxLevels, true
}

// HasMaxLevels returns a boolean if a field has been set.
func (o *ServiceRootV190Expand) HasMaxLevels() bool {
	if o != nil && o.MaxLevels != nil {
		return true
	}

	return false
}

// SetMaxLevels gets a reference to the given int64 and assigns it to the MaxLevels field.
func (o *ServiceRootV190Expand) SetMaxLevels(v int64) {
	o.MaxLevels = &v
}

// GetNoLinks returns the NoLinks field value if set, zero value otherwise.
func (o *ServiceRootV190Expand) GetNoLinks() bool {
	if o == nil || o.NoLinks == nil {
		var ret bool
		return ret
	}
	return *o.NoLinks
}

// GetNoLinksOk returns a tuple with the NoLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190Expand) GetNoLinksOk() (*bool, bool) {
	if o == nil || o.NoLinks == nil {
		return nil, false
	}
	return o.NoLinks, true
}

// HasNoLinks returns a boolean if a field has been set.
func (o *ServiceRootV190Expand) HasNoLinks() bool {
	if o != nil && o.NoLinks != nil {
		return true
	}

	return false
}

// SetNoLinks gets a reference to the given bool and assigns it to the NoLinks field.
func (o *ServiceRootV190Expand) SetNoLinks(v bool) {
	o.NoLinks = &v
}

func (o ServiceRootV190Expand) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ExpandAll != nil {
		toSerialize["ExpandAll"] = o.ExpandAll
	}
	if o.Levels != nil {
		toSerialize["Levels"] = o.Levels
	}
	if o.Links != nil {
		toSerialize["Links"] = o.Links
	}
	if o.MaxLevels != nil {
		toSerialize["MaxLevels"] = o.MaxLevels
	}
	if o.NoLinks != nil {
		toSerialize["NoLinks"] = o.NoLinks
	}
	return json.Marshal(toSerialize)
}

type NullableServiceRootV190Expand struct {
	value *ServiceRootV190Expand
	isSet bool
}

func (v NullableServiceRootV190Expand) Get() *ServiceRootV190Expand {
	return v.value
}

func (v *NullableServiceRootV190Expand) Set(val *ServiceRootV190Expand) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceRootV190Expand) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceRootV190Expand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceRootV190Expand(val *ServiceRootV190Expand) *NullableServiceRootV190Expand {
	return &NullableServiceRootV190Expand{value: val, isSet: true}
}

func (v NullableServiceRootV190Expand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceRootV190Expand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


