/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2020.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package redfish

import (
	"encoding/json"
)

// ServiceRootV190ServiceRoot The ServiceRoot schema describes the root of the Redfish Service, located at the '/redfish/v1' URI.  All other Resources accessible through the Redfish interface on this device are linked directly or indirectly from the Service Root.
type ServiceRootV190ServiceRoot struct {
	// The OData description of a payload.
	OdataContext *string `json:"@odata.context,omitempty"`
	// The current ETag of the resource.
	OdataEtag *string `json:"@odata.etag,omitempty"`
	// The unique identifier for a resource.
	OdataId string `json:"@odata.id"`
	// The type of a resource.
	OdataType string `json:"@odata.type"`
	AccountService *OdataV4IdRef `json:"AccountService,omitempty"`
	AggregationService *OdataV4IdRef `json:"AggregationService,omitempty"`
	CertificateService *OdataV4IdRef `json:"CertificateService,omitempty"`
	Chassis *OdataV4IdRef `json:"Chassis,omitempty"`
	CompositionService *OdataV4IdRef `json:"CompositionService,omitempty"`
	// The description of this resource.  Used for commonality in the schema definitions.
	Description *string `json:"Description,omitempty"`
	EventService *OdataV4IdRef `json:"EventService,omitempty"`
	Fabrics *OdataV4IdRef `json:"Fabrics,omitempty"`
	Facilities *OdataV4IdRef `json:"Facilities,omitempty"`
	// The identifier that uniquely identifies the resource within the collection of similar resources.
	Id string `json:"Id"`
	JobService *OdataV4IdRef `json:"JobService,omitempty"`
	JsonSchemas *OdataV4IdRef `json:"JsonSchemas,omitempty"`
	Links ServiceRootV190Links `json:"Links"`
	Managers *OdataV4IdRef `json:"Managers,omitempty"`
	// The name of the resource or array member.
	Name string `json:"Name"`
	// The OEM extension.
	Oem *map[string]map[string]interface{} `json:"Oem,omitempty"`
	PowerEquipment *OdataV4IdRef `json:"PowerEquipment,omitempty"`
	// The product associated with this Redfish Service.
	Product NullableString `json:"Product,omitempty"`
	ProtocolFeaturesSupported *ServiceRootV190ProtocolFeaturesSupported `json:"ProtocolFeaturesSupported,omitempty"`
	// The version of the Redfish Service.
	RedfishVersion *string `json:"RedfishVersion,omitempty"`
	Registries *OdataV4IdRef `json:"Registries,omitempty"`
	ResourceBlocks *OdataV4IdRef `json:"ResourceBlocks,omitempty"`
	SessionService *OdataV4IdRef `json:"SessionService,omitempty"`
	Storage *OdataV4IdRef `json:"Storage,omitempty"`
	StorageServices *OdataV4IdRef `json:"StorageServices,omitempty"`
	StorageSystems *OdataV4IdRef `json:"StorageSystems,omitempty"`
	Systems *OdataV4IdRef `json:"Systems,omitempty"`
	Tasks *OdataV4IdRef `json:"Tasks,omitempty"`
	TelemetryService *OdataV4IdRef `json:"TelemetryService,omitempty"`
	UUID *string `json:"UUID,omitempty"`
	UpdateService *OdataV4IdRef `json:"UpdateService,omitempty"`
	// The vendor or manufacturer associated with this Redfish Service.
	Vendor NullableString `json:"Vendor,omitempty"`
}

// NewServiceRootV190ServiceRoot instantiates a new ServiceRootV190ServiceRoot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceRootV190ServiceRoot(odataId string, odataType string, id string, links ServiceRootV190Links, name string, ) *ServiceRootV190ServiceRoot {
	this := ServiceRootV190ServiceRoot{}
	this.OdataId = odataId
	this.OdataType = odataType
	this.Id = id
	this.Links = links
	this.Name = name
	return &this
}

// NewServiceRootV190ServiceRootWithDefaults instantiates a new ServiceRootV190ServiceRoot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceRootV190ServiceRootWithDefaults() *ServiceRootV190ServiceRoot {
	this := ServiceRootV190ServiceRoot{}
	return &this
}

// GetOdataContext returns the OdataContext field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetOdataContext() string {
	if o == nil || o.OdataContext == nil {
		var ret string
		return ret
	}
	return *o.OdataContext
}

// GetOdataContextOk returns a tuple with the OdataContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetOdataContextOk() (*string, bool) {
	if o == nil || o.OdataContext == nil {
		return nil, false
	}
	return o.OdataContext, true
}

// HasOdataContext returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasOdataContext() bool {
	if o != nil && o.OdataContext != nil {
		return true
	}

	return false
}

// SetOdataContext gets a reference to the given string and assigns it to the OdataContext field.
func (o *ServiceRootV190ServiceRoot) SetOdataContext(v string) {
	o.OdataContext = &v
}

// GetOdataEtag returns the OdataEtag field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetOdataEtag() string {
	if o == nil || o.OdataEtag == nil {
		var ret string
		return ret
	}
	return *o.OdataEtag
}

// GetOdataEtagOk returns a tuple with the OdataEtag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetOdataEtagOk() (*string, bool) {
	if o == nil || o.OdataEtag == nil {
		return nil, false
	}
	return o.OdataEtag, true
}

// HasOdataEtag returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasOdataEtag() bool {
	if o != nil && o.OdataEtag != nil {
		return true
	}

	return false
}

// SetOdataEtag gets a reference to the given string and assigns it to the OdataEtag field.
func (o *ServiceRootV190ServiceRoot) SetOdataEtag(v string) {
	o.OdataEtag = &v
}

// GetOdataId returns the OdataId field value
func (o *ServiceRootV190ServiceRoot) GetOdataId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.OdataId
}

// GetOdataIdOk returns a tuple with the OdataId field value
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetOdataIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OdataId, true
}

// SetOdataId sets field value
func (o *ServiceRootV190ServiceRoot) SetOdataId(v string) {
	o.OdataId = v
}

// GetOdataType returns the OdataType field value
func (o *ServiceRootV190ServiceRoot) GetOdataType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.OdataType
}

// GetOdataTypeOk returns a tuple with the OdataType field value
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetOdataTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OdataType, true
}

// SetOdataType sets field value
func (o *ServiceRootV190ServiceRoot) SetOdataType(v string) {
	o.OdataType = v
}

// GetAccountService returns the AccountService field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetAccountService() OdataV4IdRef {
	if o == nil || o.AccountService == nil {
		var ret OdataV4IdRef
		return ret
	}
	return *o.AccountService
}

// GetAccountServiceOk returns a tuple with the AccountService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetAccountServiceOk() (*OdataV4IdRef, bool) {
	if o == nil || o.AccountService == nil {
		return nil, false
	}
	return o.AccountService, true
}

// HasAccountService returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasAccountService() bool {
	if o != nil && o.AccountService != nil {
		return true
	}

	return false
}

// SetAccountService gets a reference to the given OdataV4IdRef and assigns it to the AccountService field.
func (o *ServiceRootV190ServiceRoot) SetAccountService(v OdataV4IdRef) {
	o.AccountService = &v
}

// GetAggregationService returns the AggregationService field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetAggregationService() OdataV4IdRef {
	if o == nil || o.AggregationService == nil {
		var ret OdataV4IdRef
		return ret
	}
	return *o.AggregationService
}

// GetAggregationServiceOk returns a tuple with the AggregationService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetAggregationServiceOk() (*OdataV4IdRef, bool) {
	if o == nil || o.AggregationService == nil {
		return nil, false
	}
	return o.AggregationService, true
}

// HasAggregationService returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasAggregationService() bool {
	if o != nil && o.AggregationService != nil {
		return true
	}

	return false
}

// SetAggregationService gets a reference to the given OdataV4IdRef and assigns it to the AggregationService field.
func (o *ServiceRootV190ServiceRoot) SetAggregationService(v OdataV4IdRef) {
	o.AggregationService = &v
}

// GetCertificateService returns the CertificateService field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetCertificateService() OdataV4IdRef {
	if o == nil || o.CertificateService == nil {
		var ret OdataV4IdRef
		return ret
	}
	return *o.CertificateService
}

// GetCertificateServiceOk returns a tuple with the CertificateService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetCertificateServiceOk() (*OdataV4IdRef, bool) {
	if o == nil || o.CertificateService == nil {
		return nil, false
	}
	return o.CertificateService, true
}

// HasCertificateService returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasCertificateService() bool {
	if o != nil && o.CertificateService != nil {
		return true
	}

	return false
}

// SetCertificateService gets a reference to the given OdataV4IdRef and assigns it to the CertificateService field.
func (o *ServiceRootV190ServiceRoot) SetCertificateService(v OdataV4IdRef) {
	o.CertificateService = &v
}

// GetChassis returns the Chassis field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetChassis() OdataV4IdRef {
	if o == nil || o.Chassis == nil {
		var ret OdataV4IdRef
		return ret
	}
	return *o.Chassis
}

// GetChassisOk returns a tuple with the Chassis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetChassisOk() (*OdataV4IdRef, bool) {
	if o == nil || o.Chassis == nil {
		return nil, false
	}
	return o.Chassis, true
}

// HasChassis returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasChassis() bool {
	if o != nil && o.Chassis != nil {
		return true
	}

	return false
}

// SetChassis gets a reference to the given OdataV4IdRef and assigns it to the Chassis field.
func (o *ServiceRootV190ServiceRoot) SetChassis(v OdataV4IdRef) {
	o.Chassis = &v
}

// GetCompositionService returns the CompositionService field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetCompositionService() OdataV4IdRef {
	if o == nil || o.CompositionService == nil {
		var ret OdataV4IdRef
		return ret
	}
	return *o.CompositionService
}

// GetCompositionServiceOk returns a tuple with the CompositionService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetCompositionServiceOk() (*OdataV4IdRef, bool) {
	if o == nil || o.CompositionService == nil {
		return nil, false
	}
	return o.CompositionService, true
}

// HasCompositionService returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasCompositionService() bool {
	if o != nil && o.CompositionService != nil {
		return true
	}

	return false
}

// SetCompositionService gets a reference to the given OdataV4IdRef and assigns it to the CompositionService field.
func (o *ServiceRootV190ServiceRoot) SetCompositionService(v OdataV4IdRef) {
	o.CompositionService = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ServiceRootV190ServiceRoot) SetDescription(v string) {
	o.Description = &v
}

// GetEventService returns the EventService field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetEventService() OdataV4IdRef {
	if o == nil || o.EventService == nil {
		var ret OdataV4IdRef
		return ret
	}
	return *o.EventService
}

// GetEventServiceOk returns a tuple with the EventService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetEventServiceOk() (*OdataV4IdRef, bool) {
	if o == nil || o.EventService == nil {
		return nil, false
	}
	return o.EventService, true
}

// HasEventService returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasEventService() bool {
	if o != nil && o.EventService != nil {
		return true
	}

	return false
}

// SetEventService gets a reference to the given OdataV4IdRef and assigns it to the EventService field.
func (o *ServiceRootV190ServiceRoot) SetEventService(v OdataV4IdRef) {
	o.EventService = &v
}

// GetFabrics returns the Fabrics field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetFabrics() OdataV4IdRef {
	if o == nil || o.Fabrics == nil {
		var ret OdataV4IdRef
		return ret
	}
	return *o.Fabrics
}

// GetFabricsOk returns a tuple with the Fabrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetFabricsOk() (*OdataV4IdRef, bool) {
	if o == nil || o.Fabrics == nil {
		return nil, false
	}
	return o.Fabrics, true
}

// HasFabrics returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasFabrics() bool {
	if o != nil && o.Fabrics != nil {
		return true
	}

	return false
}

// SetFabrics gets a reference to the given OdataV4IdRef and assigns it to the Fabrics field.
func (o *ServiceRootV190ServiceRoot) SetFabrics(v OdataV4IdRef) {
	o.Fabrics = &v
}

// GetFacilities returns the Facilities field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetFacilities() OdataV4IdRef {
	if o == nil || o.Facilities == nil {
		var ret OdataV4IdRef
		return ret
	}
	return *o.Facilities
}

// GetFacilitiesOk returns a tuple with the Facilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetFacilitiesOk() (*OdataV4IdRef, bool) {
	if o == nil || o.Facilities == nil {
		return nil, false
	}
	return o.Facilities, true
}

// HasFacilities returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasFacilities() bool {
	if o != nil && o.Facilities != nil {
		return true
	}

	return false
}

// SetFacilities gets a reference to the given OdataV4IdRef and assigns it to the Facilities field.
func (o *ServiceRootV190ServiceRoot) SetFacilities(v OdataV4IdRef) {
	o.Facilities = &v
}

// GetId returns the Id field value
func (o *ServiceRootV190ServiceRoot) GetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ServiceRootV190ServiceRoot) SetId(v string) {
	o.Id = v
}

// GetJobService returns the JobService field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetJobService() OdataV4IdRef {
	if o == nil || o.JobService == nil {
		var ret OdataV4IdRef
		return ret
	}
	return *o.JobService
}

// GetJobServiceOk returns a tuple with the JobService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetJobServiceOk() (*OdataV4IdRef, bool) {
	if o == nil || o.JobService == nil {
		return nil, false
	}
	return o.JobService, true
}

// HasJobService returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasJobService() bool {
	if o != nil && o.JobService != nil {
		return true
	}

	return false
}

// SetJobService gets a reference to the given OdataV4IdRef and assigns it to the JobService field.
func (o *ServiceRootV190ServiceRoot) SetJobService(v OdataV4IdRef) {
	o.JobService = &v
}

// GetJsonSchemas returns the JsonSchemas field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetJsonSchemas() OdataV4IdRef {
	if o == nil || o.JsonSchemas == nil {
		var ret OdataV4IdRef
		return ret
	}
	return *o.JsonSchemas
}

// GetJsonSchemasOk returns a tuple with the JsonSchemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetJsonSchemasOk() (*OdataV4IdRef, bool) {
	if o == nil || o.JsonSchemas == nil {
		return nil, false
	}
	return o.JsonSchemas, true
}

// HasJsonSchemas returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasJsonSchemas() bool {
	if o != nil && o.JsonSchemas != nil {
		return true
	}

	return false
}

// SetJsonSchemas gets a reference to the given OdataV4IdRef and assigns it to the JsonSchemas field.
func (o *ServiceRootV190ServiceRoot) SetJsonSchemas(v OdataV4IdRef) {
	o.JsonSchemas = &v
}

// GetLinks returns the Links field value
func (o *ServiceRootV190ServiceRoot) GetLinks() ServiceRootV190Links {
	if o == nil  {
		var ret ServiceRootV190Links
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetLinksOk() (*ServiceRootV190Links, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *ServiceRootV190ServiceRoot) SetLinks(v ServiceRootV190Links) {
	o.Links = v
}

// GetManagers returns the Managers field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetManagers() OdataV4IdRef {
	if o == nil || o.Managers == nil {
		var ret OdataV4IdRef
		return ret
	}
	return *o.Managers
}

// GetManagersOk returns a tuple with the Managers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetManagersOk() (*OdataV4IdRef, bool) {
	if o == nil || o.Managers == nil {
		return nil, false
	}
	return o.Managers, true
}

// HasManagers returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasManagers() bool {
	if o != nil && o.Managers != nil {
		return true
	}

	return false
}

// SetManagers gets a reference to the given OdataV4IdRef and assigns it to the Managers field.
func (o *ServiceRootV190ServiceRoot) SetManagers(v OdataV4IdRef) {
	o.Managers = &v
}

// GetName returns the Name field value
func (o *ServiceRootV190ServiceRoot) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ServiceRootV190ServiceRoot) SetName(v string) {
	o.Name = v
}

// GetOem returns the Oem field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetOem() map[string]map[string]interface{} {
	if o == nil || o.Oem == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.Oem
}

// GetOemOk returns a tuple with the Oem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetOemOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || o.Oem == nil {
		return nil, false
	}
	return o.Oem, true
}

// HasOem returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasOem() bool {
	if o != nil && o.Oem != nil {
		return true
	}

	return false
}

// SetOem gets a reference to the given map[string]map[string]interface{} and assigns it to the Oem field.
func (o *ServiceRootV190ServiceRoot) SetOem(v map[string]map[string]interface{}) {
	o.Oem = &v
}

// GetPowerEquipment returns the PowerEquipment field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetPowerEquipment() OdataV4IdRef {
	if o == nil || o.PowerEquipment == nil {
		var ret OdataV4IdRef
		return ret
	}
	return *o.PowerEquipment
}

// GetPowerEquipmentOk returns a tuple with the PowerEquipment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetPowerEquipmentOk() (*OdataV4IdRef, bool) {
	if o == nil || o.PowerEquipment == nil {
		return nil, false
	}
	return o.PowerEquipment, true
}

// HasPowerEquipment returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasPowerEquipment() bool {
	if o != nil && o.PowerEquipment != nil {
		return true
	}

	return false
}

// SetPowerEquipment gets a reference to the given OdataV4IdRef and assigns it to the PowerEquipment field.
func (o *ServiceRootV190ServiceRoot) SetPowerEquipment(v OdataV4IdRef) {
	o.PowerEquipment = &v
}

// GetProduct returns the Product field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceRootV190ServiceRoot) GetProduct() string {
	if o == nil || o.Product.Get() == nil {
		var ret string
		return ret
	}
	return *o.Product.Get()
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceRootV190ServiceRoot) GetProductOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Product.Get(), o.Product.IsSet()
}

// HasProduct returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasProduct() bool {
	if o != nil && o.Product.IsSet() {
		return true
	}

	return false
}

// SetProduct gets a reference to the given NullableString and assigns it to the Product field.
func (o *ServiceRootV190ServiceRoot) SetProduct(v string) {
	o.Product.Set(&v)
}
// SetProductNil sets the value for Product to be an explicit nil
func (o *ServiceRootV190ServiceRoot) SetProductNil() {
	o.Product.Set(nil)
}

// UnsetProduct ensures that no value is present for Product, not even an explicit nil
func (o *ServiceRootV190ServiceRoot) UnsetProduct() {
	o.Product.Unset()
}

// GetProtocolFeaturesSupported returns the ProtocolFeaturesSupported field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetProtocolFeaturesSupported() ServiceRootV190ProtocolFeaturesSupported {
	if o == nil || o.ProtocolFeaturesSupported == nil {
		var ret ServiceRootV190ProtocolFeaturesSupported
		return ret
	}
	return *o.ProtocolFeaturesSupported
}

// GetProtocolFeaturesSupportedOk returns a tuple with the ProtocolFeaturesSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetProtocolFeaturesSupportedOk() (*ServiceRootV190ProtocolFeaturesSupported, bool) {
	if o == nil || o.ProtocolFeaturesSupported == nil {
		return nil, false
	}
	return o.ProtocolFeaturesSupported, true
}

// HasProtocolFeaturesSupported returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasProtocolFeaturesSupported() bool {
	if o != nil && o.ProtocolFeaturesSupported != nil {
		return true
	}

	return false
}

// SetProtocolFeaturesSupported gets a reference to the given ServiceRootV190ProtocolFeaturesSupported and assigns it to the ProtocolFeaturesSupported field.
func (o *ServiceRootV190ServiceRoot) SetProtocolFeaturesSupported(v ServiceRootV190ProtocolFeaturesSupported) {
	o.ProtocolFeaturesSupported = &v
}

// GetRedfishVersion returns the RedfishVersion field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetRedfishVersion() string {
	if o == nil || o.RedfishVersion == nil {
		var ret string
		return ret
	}
	return *o.RedfishVersion
}

// GetRedfishVersionOk returns a tuple with the RedfishVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetRedfishVersionOk() (*string, bool) {
	if o == nil || o.RedfishVersion == nil {
		return nil, false
	}
	return o.RedfishVersion, true
}

// HasRedfishVersion returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasRedfishVersion() bool {
	if o != nil && o.RedfishVersion != nil {
		return true
	}

	return false
}

// SetRedfishVersion gets a reference to the given string and assigns it to the RedfishVersion field.
func (o *ServiceRootV190ServiceRoot) SetRedfishVersion(v string) {
	o.RedfishVersion = &v
}

// GetRegistries returns the Registries field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetRegistries() OdataV4IdRef {
	if o == nil || o.Registries == nil {
		var ret OdataV4IdRef
		return ret
	}
	return *o.Registries
}

// GetRegistriesOk returns a tuple with the Registries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetRegistriesOk() (*OdataV4IdRef, bool) {
	if o == nil || o.Registries == nil {
		return nil, false
	}
	return o.Registries, true
}

// HasRegistries returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasRegistries() bool {
	if o != nil && o.Registries != nil {
		return true
	}

	return false
}

// SetRegistries gets a reference to the given OdataV4IdRef and assigns it to the Registries field.
func (o *ServiceRootV190ServiceRoot) SetRegistries(v OdataV4IdRef) {
	o.Registries = &v
}

// GetResourceBlocks returns the ResourceBlocks field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetResourceBlocks() OdataV4IdRef {
	if o == nil || o.ResourceBlocks == nil {
		var ret OdataV4IdRef
		return ret
	}
	return *o.ResourceBlocks
}

// GetResourceBlocksOk returns a tuple with the ResourceBlocks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetResourceBlocksOk() (*OdataV4IdRef, bool) {
	if o == nil || o.ResourceBlocks == nil {
		return nil, false
	}
	return o.ResourceBlocks, true
}

// HasResourceBlocks returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasResourceBlocks() bool {
	if o != nil && o.ResourceBlocks != nil {
		return true
	}

	return false
}

// SetResourceBlocks gets a reference to the given OdataV4IdRef and assigns it to the ResourceBlocks field.
func (o *ServiceRootV190ServiceRoot) SetResourceBlocks(v OdataV4IdRef) {
	o.ResourceBlocks = &v
}

// GetSessionService returns the SessionService field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetSessionService() OdataV4IdRef {
	if o == nil || o.SessionService == nil {
		var ret OdataV4IdRef
		return ret
	}
	return *o.SessionService
}

// GetSessionServiceOk returns a tuple with the SessionService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetSessionServiceOk() (*OdataV4IdRef, bool) {
	if o == nil || o.SessionService == nil {
		return nil, false
	}
	return o.SessionService, true
}

// HasSessionService returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasSessionService() bool {
	if o != nil && o.SessionService != nil {
		return true
	}

	return false
}

// SetSessionService gets a reference to the given OdataV4IdRef and assigns it to the SessionService field.
func (o *ServiceRootV190ServiceRoot) SetSessionService(v OdataV4IdRef) {
	o.SessionService = &v
}

// GetStorage returns the Storage field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetStorage() OdataV4IdRef {
	if o == nil || o.Storage == nil {
		var ret OdataV4IdRef
		return ret
	}
	return *o.Storage
}

// GetStorageOk returns a tuple with the Storage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetStorageOk() (*OdataV4IdRef, bool) {
	if o == nil || o.Storage == nil {
		return nil, false
	}
	return o.Storage, true
}

// HasStorage returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasStorage() bool {
	if o != nil && o.Storage != nil {
		return true
	}

	return false
}

// SetStorage gets a reference to the given OdataV4IdRef and assigns it to the Storage field.
func (o *ServiceRootV190ServiceRoot) SetStorage(v OdataV4IdRef) {
	o.Storage = &v
}

// GetStorageServices returns the StorageServices field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetStorageServices() OdataV4IdRef {
	if o == nil || o.StorageServices == nil {
		var ret OdataV4IdRef
		return ret
	}
	return *o.StorageServices
}

// GetStorageServicesOk returns a tuple with the StorageServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetStorageServicesOk() (*OdataV4IdRef, bool) {
	if o == nil || o.StorageServices == nil {
		return nil, false
	}
	return o.StorageServices, true
}

// HasStorageServices returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasStorageServices() bool {
	if o != nil && o.StorageServices != nil {
		return true
	}

	return false
}

// SetStorageServices gets a reference to the given OdataV4IdRef and assigns it to the StorageServices field.
func (o *ServiceRootV190ServiceRoot) SetStorageServices(v OdataV4IdRef) {
	o.StorageServices = &v
}

// GetStorageSystems returns the StorageSystems field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetStorageSystems() OdataV4IdRef {
	if o == nil || o.StorageSystems == nil {
		var ret OdataV4IdRef
		return ret
	}
	return *o.StorageSystems
}

// GetStorageSystemsOk returns a tuple with the StorageSystems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetStorageSystemsOk() (*OdataV4IdRef, bool) {
	if o == nil || o.StorageSystems == nil {
		return nil, false
	}
	return o.StorageSystems, true
}

// HasStorageSystems returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasStorageSystems() bool {
	if o != nil && o.StorageSystems != nil {
		return true
	}

	return false
}

// SetStorageSystems gets a reference to the given OdataV4IdRef and assigns it to the StorageSystems field.
func (o *ServiceRootV190ServiceRoot) SetStorageSystems(v OdataV4IdRef) {
	o.StorageSystems = &v
}

// GetSystems returns the Systems field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetSystems() OdataV4IdRef {
	if o == nil || o.Systems == nil {
		var ret OdataV4IdRef
		return ret
	}
	return *o.Systems
}

// GetSystemsOk returns a tuple with the Systems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetSystemsOk() (*OdataV4IdRef, bool) {
	if o == nil || o.Systems == nil {
		return nil, false
	}
	return o.Systems, true
}

// HasSystems returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasSystems() bool {
	if o != nil && o.Systems != nil {
		return true
	}

	return false
}

// SetSystems gets a reference to the given OdataV4IdRef and assigns it to the Systems field.
func (o *ServiceRootV190ServiceRoot) SetSystems(v OdataV4IdRef) {
	o.Systems = &v
}

// GetTasks returns the Tasks field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetTasks() OdataV4IdRef {
	if o == nil || o.Tasks == nil {
		var ret OdataV4IdRef
		return ret
	}
	return *o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetTasksOk() (*OdataV4IdRef, bool) {
	if o == nil || o.Tasks == nil {
		return nil, false
	}
	return o.Tasks, true
}

// HasTasks returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasTasks() bool {
	if o != nil && o.Tasks != nil {
		return true
	}

	return false
}

// SetTasks gets a reference to the given OdataV4IdRef and assigns it to the Tasks field.
func (o *ServiceRootV190ServiceRoot) SetTasks(v OdataV4IdRef) {
	o.Tasks = &v
}

// GetTelemetryService returns the TelemetryService field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetTelemetryService() OdataV4IdRef {
	if o == nil || o.TelemetryService == nil {
		var ret OdataV4IdRef
		return ret
	}
	return *o.TelemetryService
}

// GetTelemetryServiceOk returns a tuple with the TelemetryService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetTelemetryServiceOk() (*OdataV4IdRef, bool) {
	if o == nil || o.TelemetryService == nil {
		return nil, false
	}
	return o.TelemetryService, true
}

// HasTelemetryService returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasTelemetryService() bool {
	if o != nil && o.TelemetryService != nil {
		return true
	}

	return false
}

// SetTelemetryService gets a reference to the given OdataV4IdRef and assigns it to the TelemetryService field.
func (o *ServiceRootV190ServiceRoot) SetTelemetryService(v OdataV4IdRef) {
	o.TelemetryService = &v
}

// GetUUID returns the UUID field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetUUID() string {
	if o == nil || o.UUID == nil {
		var ret string
		return ret
	}
	return *o.UUID
}

// GetUUIDOk returns a tuple with the UUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetUUIDOk() (*string, bool) {
	if o == nil || o.UUID == nil {
		return nil, false
	}
	return o.UUID, true
}

// HasUUID returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasUUID() bool {
	if o != nil && o.UUID != nil {
		return true
	}

	return false
}

// SetUUID gets a reference to the given string and assigns it to the UUID field.
func (o *ServiceRootV190ServiceRoot) SetUUID(v string) {
	o.UUID = &v
}

// GetUpdateService returns the UpdateService field value if set, zero value otherwise.
func (o *ServiceRootV190ServiceRoot) GetUpdateService() OdataV4IdRef {
	if o == nil || o.UpdateService == nil {
		var ret OdataV4IdRef
		return ret
	}
	return *o.UpdateService
}

// GetUpdateServiceOk returns a tuple with the UpdateService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRootV190ServiceRoot) GetUpdateServiceOk() (*OdataV4IdRef, bool) {
	if o == nil || o.UpdateService == nil {
		return nil, false
	}
	return o.UpdateService, true
}

// HasUpdateService returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasUpdateService() bool {
	if o != nil && o.UpdateService != nil {
		return true
	}

	return false
}

// SetUpdateService gets a reference to the given OdataV4IdRef and assigns it to the UpdateService field.
func (o *ServiceRootV190ServiceRoot) SetUpdateService(v OdataV4IdRef) {
	o.UpdateService = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceRootV190ServiceRoot) GetVendor() string {
	if o == nil || o.Vendor.Get() == nil {
		var ret string
		return ret
	}
	return *o.Vendor.Get()
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceRootV190ServiceRoot) GetVendorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Vendor.Get(), o.Vendor.IsSet()
}

// HasVendor returns a boolean if a field has been set.
func (o *ServiceRootV190ServiceRoot) HasVendor() bool {
	if o != nil && o.Vendor.IsSet() {
		return true
	}

	return false
}

// SetVendor gets a reference to the given NullableString and assigns it to the Vendor field.
func (o *ServiceRootV190ServiceRoot) SetVendor(v string) {
	o.Vendor.Set(&v)
}
// SetVendorNil sets the value for Vendor to be an explicit nil
func (o *ServiceRootV190ServiceRoot) SetVendorNil() {
	o.Vendor.Set(nil)
}

// UnsetVendor ensures that no value is present for Vendor, not even an explicit nil
func (o *ServiceRootV190ServiceRoot) UnsetVendor() {
	o.Vendor.Unset()
}

func (o ServiceRootV190ServiceRoot) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OdataContext != nil {
		toSerialize["@odata.context"] = o.OdataContext
	}
	if o.OdataEtag != nil {
		toSerialize["@odata.etag"] = o.OdataEtag
	}
	if true {
		toSerialize["@odata.id"] = o.OdataId
	}
	if true {
		toSerialize["@odata.type"] = o.OdataType
	}
	if o.AccountService != nil {
		toSerialize["AccountService"] = o.AccountService
	}
	if o.AggregationService != nil {
		toSerialize["AggregationService"] = o.AggregationService
	}
	if o.CertificateService != nil {
		toSerialize["CertificateService"] = o.CertificateService
	}
	if o.Chassis != nil {
		toSerialize["Chassis"] = o.Chassis
	}
	if o.CompositionService != nil {
		toSerialize["CompositionService"] = o.CompositionService
	}
	if o.Description != nil {
		toSerialize["Description"] = o.Description
	}
	if o.EventService != nil {
		toSerialize["EventService"] = o.EventService
	}
	if o.Fabrics != nil {
		toSerialize["Fabrics"] = o.Fabrics
	}
	if o.Facilities != nil {
		toSerialize["Facilities"] = o.Facilities
	}
	if true {
		toSerialize["Id"] = o.Id
	}
	if o.JobService != nil {
		toSerialize["JobService"] = o.JobService
	}
	if o.JsonSchemas != nil {
		toSerialize["JsonSchemas"] = o.JsonSchemas
	}
	if true {
		toSerialize["Links"] = o.Links
	}
	if o.Managers != nil {
		toSerialize["Managers"] = o.Managers
	}
	if true {
		toSerialize["Name"] = o.Name
	}
	if o.Oem != nil {
		toSerialize["Oem"] = o.Oem
	}
	if o.PowerEquipment != nil {
		toSerialize["PowerEquipment"] = o.PowerEquipment
	}
	if o.Product.IsSet() {
		toSerialize["Product"] = o.Product.Get()
	}
	if o.ProtocolFeaturesSupported != nil {
		toSerialize["ProtocolFeaturesSupported"] = o.ProtocolFeaturesSupported
	}
	if o.RedfishVersion != nil {
		toSerialize["RedfishVersion"] = o.RedfishVersion
	}
	if o.Registries != nil {
		toSerialize["Registries"] = o.Registries
	}
	if o.ResourceBlocks != nil {
		toSerialize["ResourceBlocks"] = o.ResourceBlocks
	}
	if o.SessionService != nil {
		toSerialize["SessionService"] = o.SessionService
	}
	if o.Storage != nil {
		toSerialize["Storage"] = o.Storage
	}
	if o.StorageServices != nil {
		toSerialize["StorageServices"] = o.StorageServices
	}
	if o.StorageSystems != nil {
		toSerialize["StorageSystems"] = o.StorageSystems
	}
	if o.Systems != nil {
		toSerialize["Systems"] = o.Systems
	}
	if o.Tasks != nil {
		toSerialize["Tasks"] = o.Tasks
	}
	if o.TelemetryService != nil {
		toSerialize["TelemetryService"] = o.TelemetryService
	}
	if o.UUID != nil {
		toSerialize["UUID"] = o.UUID
	}
	if o.UpdateService != nil {
		toSerialize["UpdateService"] = o.UpdateService
	}
	if o.Vendor.IsSet() {
		toSerialize["Vendor"] = o.Vendor.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableServiceRootV190ServiceRoot struct {
	value *ServiceRootV190ServiceRoot
	isSet bool
}

func (v NullableServiceRootV190ServiceRoot) Get() *ServiceRootV190ServiceRoot {
	return v.value
}

func (v *NullableServiceRootV190ServiceRoot) Set(val *ServiceRootV190ServiceRoot) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceRootV190ServiceRoot) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceRootV190ServiceRoot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceRootV190ServiceRoot(val *ServiceRootV190ServiceRoot) *NullableServiceRootV190ServiceRoot {
	return &NullableServiceRootV190ServiceRoot{value: val, isSet: true}
}

func (v NullableServiceRootV190ServiceRoot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceRootV190ServiceRoot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


